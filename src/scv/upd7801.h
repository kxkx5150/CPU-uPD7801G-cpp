
#ifndef _UPD7801_H_
#define _UPD7801_H_
#include "utils/vm.h"
#include "emu/emu.h"
#include "device.h"

#define SIG_UPD7801_INTF0 0
#define SIG_UPD7801_INTF1 1
#define SIG_UPD7801_INTF2 2
#define PRESCALER         16

#define F_CY  0x01
#define F_L0  0x04
#define F_L1  0x08
#define F_HC  0x10
#define F_SK  0x20
#define F_Z   0x40
#define INTF0 0x01
#define INTFT 0x02
#define INTF1 0x04
#define INTF2 0x08
#define INTFS 0x10
#define P_A   0
#define P_B   1
#define P_C   2
#define P_SI  3
#define P_SO  4

#define VA regs[0].w
#define BC regs[1].w
#define DE regs[2].w
#define HL regs[3].w
#define _V regs[0].b[1]
#define _A regs[0].b[0]
#define _B regs[1].b[1]
#define _C regs[1].b[0]
#define _D regs[2].b[1]
#define _E regs[2].b[0]
#define _H regs[3].b[1]
#define _L regs[3].b[0]

static const uint8  irq_bits[5] = {INTF0, INTFT, INTF1, INTF2, INTFS};
static const uint16 irq_addr[5] = {0x0004, 0x0008, 0x0010, 0x0020, 0x0040};

typedef struct
{
    int oplen;
    int clock;
} op_t;


static const op_t op[256] = {
    {1, 4},  {1, 6},  {1, 7},  {1, 7},  {3, 10}, {3, 16}, {1, 4},  {2, 7},  {1, 11}, {1, 4},  {1, 4},  {1, 4},  {1, 4},
    {1, 4},  {1, 4},  {1, 4},  {1, 4},  {1, 4},  {1, 7},  {1, 7},  {3, 10}, {3, 16}, {2, 7},  {2, 7},  {1, 11}, {1, 4},
    {1, 4},  {1, 4},  {1, 4},  {1, 4},  {1, 4},  {1, 4},  {2, 13}, {1, 19}, {1, 7},  {1, 7},  {3, 10}, {3, 13}, {2, 7},
    {2, 7},  {2, 10}, {1, 7},  {1, 7},  {1, 7},  {1, 7},  {1, 7},  {1, 7},  {1, 7},  {2, 13}, {1, 13}, {1, 7},  {1, 7},
    {3, 10}, {3, 13}, {2, 7},  {2, 7},  {2, 10}, {1, 7},  {1, 7},  {1, 7},  {1, 7},  {1, 7},  {1, 7},  {1, 7},  {1, 4},
    {1, 4},  {1, 4},  {1, 4},  {3, 16}, {3, 13}, {2, 7},  {2, 7},  {0, 0},  {2, 10}, {2, 10}, {2, 10}, {0, 0},  {0, 0},
    {2, 17}, {2, 17}, {1, 4},  {1, 4},  {1, 4},  {1, 4},  {3, 10}, {3, 13}, {2, 7},  {2, 7},  {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {0, 0},  {1, 4},  {1, 15}, {1, 13}, {0, 0},  {3, 13}, {2, 7},  {2, 7},
    {2, 7},  {2, 7},  {2, 7},  {2, 7},  {2, 7},  {2, 7},  {2, 7},  {2, 7},  {0, 0},  {3, 13}, {1, 19}, {1, 4},  {0, 0},
    {3, 13}, {2, 7},  {2, 7},  {2, 16}, {2, 16}, {2, 16}, {2, 16}, {2, 16}, {2, 16}, {2, 16}, {2, 16}, {1, 19}, {1, 19},
    {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19},
    {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19},
    {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19},
    {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19},
    {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 19}, {1, 13}, {1, 13}, {1, 13},
    {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13},
    {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13},
    {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13},
    {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13},
    {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}, {1, 13}};
static const op_t op48[256] = {
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 17}, {2, 15}, {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 17}, {2, 15}, {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 11}, {2, 11}, {2, 17}, {2, 15}, {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 17}, {2, 17}, {2, 8},  {2, 8},  {2, 11}, {2, 8}, {2, 17}, {2, 15}, {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},
    {2, 8}, {2, 8},  {2, 8},  {2, 8}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}};
static const op_t op4c[256] = {
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 10}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}};
static const op_t op4d[256] = {
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10},
    {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 10}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}};
static const op_t op60[256] = {
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8}, {2, 8},
    {2, 8}, {2, 8}, {2, 8}, {2, 8}};
static const op_t op64[256] = {
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11},
    {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11},
    {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11},
    {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11},
    {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11},
    {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11},
    {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11},
    {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11},
    {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11},
    {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {3, 11}, {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 17}, {3, 17}, {3, 17}, {3, 17}, {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {3, 17}, {3, 17}, {3, 17}, {3, 17}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 17}, {3, 17}, {3, 17}, {3, 17},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 17}, {3, 17}, {3, 17}, {3, 17}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 14},
    {3, 14}, {3, 14}, {3, 14}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 17}, {3, 17}, {3, 17}, {3, 17}, {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {3, 14}, {3, 14}, {3, 14}, {3, 14}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 17}, {3, 17}, {3, 17},
    {3, 17}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 14}, {3, 14}, {3, 14}, {3, 14}, {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {3, 17}, {3, 17}, {3, 17}, {3, 17}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 14}, {3, 14}, {3, 14}, {3, 14}, {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {3, 17}, {3, 17}, {3, 17}, {3, 17}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 14}, {3, 14},
    {3, 14}, {3, 14}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 17}, {3, 17}, {3, 17}, {3, 17}, {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {3, 14}, {3, 14}, {3, 14}, {3, 14}, {2, 8},  {2, 8},  {2, 8},  {2, 8}};
static const op_t op70[256] = {
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {4, 20}, {4, 20}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {4, 20}, {4, 20}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {4, 20}, {4, 20}, {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {4, 20}, {4, 20}, {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {4, 17}, {4, 17}, {4, 17}, {4, 17}, {4, 17}, {4, 17}, {4, 17}, {4, 17}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {4, 17}, {4, 17}, {4, 17}, {4, 17}, {4, 17}, {4, 17}, {4, 17}, {4, 17}, {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11},
    {2, 11}, {2, 8},  {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 8},  {2, 11}, {2, 11}, {2, 11},
    {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 8},  {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 8},
    {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 8},  {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11},
    {2, 11}, {2, 11}, {2, 8},  {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 8},  {2, 11}, {2, 11},
    {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 8},  {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11},
    {2, 8},  {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 8},  {2, 11}, {2, 11}, {2, 11}, {2, 11},
    {2, 11}, {2, 11}, {2, 11}, {2, 8},  {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 8},  {2, 11},
    {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 8},  {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11},
    {2, 11}, {2, 8},  {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}, {2, 11}};
static const op_t op74[256] = {
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 14}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {3, 14}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 14}, {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 14}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 14},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 14}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {3, 14}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 14}, {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 14}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {3, 14}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 14}, {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {3, 14}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 14}, {2, 8},
    {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {3, 14}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},
    {2, 8},  {3, 14}, {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8},  {2, 8}};

//

class UPD7801 : public DEVICE {
  private:
    DEVICE *memory, *io;
    int     count, period, scount, tcount;

    union REGTYPE
    {
        uint8  b[2];
        uint16 w;
    } regs[4];

    uint16 SP, PC, prvPC, altVA, altBC, altDE, altHL;
    uint8  PSW, IRR, IFF, SIRQ, HALT, MK, MB, MC, TM0, TM1, SR;
    uint8  SAK, TO, PORTC;

  public:
    UPD7801(VM *parent_vm, EMU *parent_emu);
    ~UPD7801();

    void reset();
    void run(int clock);
    void write_signal(int id, uint32 data, uint32 mask);

    uint32 get_prv_pc()
    {
        return prvPC;
    }
    void set_context_mem(DEVICE *device)
    {
        memory = device;
    }
    void set_context_io(DEVICE *device)
    {
        io = device;
    }

  private:
    void OP();
    void OP48();
    void OP4C();
    void OP4D();
    void OP60();
    void OP64();
    void OP70();
    void OP74();

    inline uint8 RM8(uint16 addr)
    {
        return memory->read_data8(addr);
    }
    inline void WM8(uint16 addr, uint8 val)
    {
        memory->write_data8(addr, val);
    }
    inline uint16 RM16(uint16 addr)
    {
        return memory->read_data16(addr);
    }
    inline void WM16(uint16 addr, uint16 val)
    {
        memory->write_data16(addr, val);
    }


    inline uint8 FETCH8()
    {
        return memory->read_data8(PC++);
    }
    inline uint16 FETCH16()
    {
        uint16 tmp = memory->read_data16(PC);
        PC += 2;
        return tmp;
    }
    inline uint16 FETCHWA()
    {
        return (_V << 8) | memory->read_data8(PC++);
    }


    inline uint8 POP8()
    {
        return memory->read_data8(SP++);
    }
    inline void PUSH8(uint8 val)
    {
        memory->write_data8(--SP, val);
    }
    inline uint16 POP16()
    {
        uint16 tmp = memory->read_data16(SP);
        SP += 2;
        return tmp;
    }
    inline void PUSH16(uint16 val)
    {
        SP -= 2;
        memory->write_data16(SP, val);
    }


    inline uint8 IN8(int port)
    {
        if (port == P_C)
            return (io->read_io8(P_C) & 0x87) | (PORTC & 0x78);
        return io->read_io8(port);
    }
    inline void OUT8(int port, uint8 val)
    {
        if (port == P_C)
            PORTC = val;
        io->write_io8(port, val);
    }
    inline void UPDATE_PORTC(uint8 IOM)
    {
        io->write_io8(P_C, (PORTC & MC) | ((SAK | TO | IOM) & ~MC));
    }
};
#endif
